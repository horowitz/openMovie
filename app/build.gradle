plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.21'
    id 'jacoco'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply from: "$rootDir/libraries/common/gradle/jacoco.gradle"

android {
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests.returnDefaultValues = true
    }
    buildFeatures {
        buildConfig true
        viewBinding true
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        multiDexEnabled true
        applicationId "com.dhorowitz.openmovie"
        minSdkVersion 27
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.dhorowitz.openmovie.test.dagger.CustomTestRunner"

        buildConfigField "String", "MOVIE_DB_KEY", "\"${System.getenv("MOVIE_DB_KEY")}\""
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude("META-INF/*.kotlin_module")
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    implementation project(path: ':libraries:network')
    implementation project(path: ':libraries:common')
    implementation project(path: ':libraries:test')
    implementation project(path: ':libraries:navigation')
    implementation project(path: ':features:discover')
    implementation project(path: ':features:moviedetails')

    // Basic
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'

    // Dagger Hilt
    implementation 'com.google.dagger:hilt-android:2.38.1'
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt 'com.google.dagger:hilt-android-compiler:2.38.1'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.38.1'
    testImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    kaptTest 'com.google.dagger:hilt-android-compiler:2.38.1'

    // ktx
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "androidx.fragment:fragment-ktx:1.3.6"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'

    // Network
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.1"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.3.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Unit tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'android.arch.core:core-testing:1.1.1'

    // Mockito
    testImplementation 'org.mockito:mockito-core:3.11.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.mockito:mockito-android:3.8.0'

    // MockWebServer
    implementation "com.squareup.okhttp3:mockwebserver:4.9.1"

    // Coroutines testing
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0'

    // Instrumentation tests
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.1"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:3.4.0"
    androidTestImplementation "com.jakewharton.espresso:okhttp3-idling-resource:1.0.0"
    androidTestImplementation('com.adevinta.android:barista:4.0.0') {
        exclude group: 'org.jetbrains.kotlin' // Only if you already use Kotlin in your project
    }
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'

    //Logs
    implementation 'com.jakewharton.timber:timber:5.0.1'
}
